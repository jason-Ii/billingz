/*
 *
 *  * Copyright 2021 rjsuzuki
 *  *
 *  * Licensed under the Apache License, Version 2.0 (the "License");
 *  * you may not use this file except in compliance with the License.
 *  * You may obtain a copy of the License at
 *  *
 *  * http://www.apache.org/licenses/LICENSE-2.0
 *  *
 *  * Unless required by applicable law or agreed to in writing, software
 *  * distributed under the License is distributed on an "AS IS" BASIS,
 *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  * See the License for the specific language governing permissions and
 *  * limitations under the License.
 *  *
 *
 */

apply plugin: "com.android.library"
apply plugin: "maven-publish"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"

println("Loading github publishing settings...")


def githubUser() {
    // Load github properties file for local environment builds
    // Set env variable GPR_USER & GPR_API_KEY if not adding a properties file
    def secretsProperties = new Properties()
    def secretsFile = project.rootProject.file("secrets.properties")
    if(!secretsFile.exists()) {
        generateFile()
    }

    secretsProperties.load(new FileInputStream(rootProject.file("secrets.properties")))
    return secretsProperties["gpr.usr"] ?: System.getenv("GPR_USER")
}

def githubKey() {
    def secretsProperties = new Properties()
    def secretsFile = project.rootProject.file("secrets.properties")
    if(!secretsFile.exists()) {
        generateFile()
    }

    secretsProperties.load(new FileInputStream(rootProject.file("secrets.properties")))
    secretsProperties["gpr.key"] ?: System.getenv("GPR_API_KEY")
}

repositories {
    google()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/rjsuzuki/billingz")
        credentials {
            username = githubUser()
            // GPR_USER is a CI Environment Variable
            password = githubKey()
            // GPR_API_KEY is a CI Environment Variable
        }
    }
}

def generateFile() {
    println "File not found: generating a new secrets.properties file..."
    def secretsProperties = new Properties()
    def secretsFile = project.rootProject.file("secrets.properties")

    secretsProperties.setProperty('gpr.usr', '')
    secretsProperties.setProperty('gpr.key', '')

    Writer writer = new FileWriter(secretsFile, false)
    secretsProperties.store(writer, "Project secrets go here...")
    writer.close()
}


project.afterEvaluate {

    publishing {


        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/rjsuzuki/billingz")
                credentials {
                    username = githubUser()
                    password = githubKey()
                }
            }
        }

        publications {

            // Creates a Maven publication called "release".
            release(MavenPublication) {
                groupId = LibraryInfo.groupId
                artifactId = "${LibraryInfo.libraryArtifactId}"
                version = "${project.ext.get("billingzVersion")}"
                artifact("$buildDir/outputs/aar/${project.ext.get("billingzArtifact")}.aar")
            }
        }
    }
}

