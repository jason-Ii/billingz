plugins {
    id "com.android.library"
    id "maven-publish"
    id "kotlin-android"
    id "kotlin-kapt"

}

println("Publishing libraries to maven")

repositories {
    google()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/textme/textme-android-i18n-module")
        credentials {
            username = githubUser()
            password = githubKey()
        }
    }
}

// Github Packages
def githubUser() {
    // Load github properties file for local environment builds
    // Set env variable GPR_USER & GPR_API_KEY if not adding a properties file
    //ef githubProperties = new Properties()
    //githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
    return githubProperties["gpr.usr"] ?: System.getenv("GPR_USER")
}
def githubKey() {
    //def githubProperties = new Properties()
    //githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
    githubProperties["gpr.key"] ?: System.getenv("GPR_API_KEY")
}

def getArtifactName(boolean isDebug) {
    if(isDebug) {

    }

    return "billingz-core-1.0.0.aar"
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {

        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/rjsuzuki/billingz")
                credentials {
                    username = System.getenv('GPR_USER')    ?: githubProperties['gpr.usr'] // GPR_USER is a CI Environment Variable
                    password = System.getenv('GPR_API_KEY') ?: githubProperties['gpr.key'] // GPR_API_KEY is a CI Environment Variable
                }
            }
        }

        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                groupId = 'com.zuko.libs'
                artifactId = 'billingz'
                version = getVersionName()
                artifact("$buildDir/outputs/aar/lib-release.aar")
            }

            // Creates a Maven publication called "debug".
            debug(MavenPublication) {
                // Applies the component for the debug build variant
                from components.debug
                groupId = 'com.zuko.libs'
                artifactId = 'billingz-debug'
                version = getVersionName()
                artifact("$buildDir/outputs/aar/lib-release.aar")
            }
        }
    }
}
