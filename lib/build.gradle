plugins {
    id "com.android.library"
    id "maven-publish"
    id "kotlin-android"
    id "kotlin-kapt"
    id "org.jetbrains.dokka"
}

apply from: "$project.rootDir/spotless.gradle"





android {
    // Github Packages
    def githubProperties = new Properties()
    githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
    githubProperties["gpr.usr"] ?: System.getenv("GPR_USER")

    githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
    githubProperties["gpr.key"] ?: System.getenv("GPR_API_KEY")

    def versionProperties = new Properties()
    rootProject.file("version.properties").withInputStream { versionProperties.load(it) }

    def getDynamicVersionCode =  { ->
        String major = versionProperties['v.major']
        String minor = versionProperties['v.minor']
        String hotfix = versionProperties['v.hotfix']
        String result = "$major$minor$hotfix"
        return result.toInteger()
    }

    def getVersionName = { ->
        String major = versionProperties['v.major']
        String minor = versionProperties['v.minor']
        String hotfix = versionProperties['v.hotfix']
        String result = "${major.toString()}.${minor.toString()}.${hotfix.toString()}"
        return result
    }

    def getArtifactId = { ->
        return rootProject.name
    }

    afterEvaluate {
        publishing {

            repositories {
                maven {
                    name = "GitHubPackages"
                    url = uri("https://maven.pkg.github.com/rjsuzuki/billingz")
                    credentials {
                        username = System.getenv('GPR_USER')    ?: githubProperties['gpr.usr'] // GPR_USER is a CI Environment Variable
                        password = System.getenv('GPR_API_KEY') ?: githubProperties['gpr.key'] // GPR_API_KEY is a CI Environment Variable
                    }
                }
            }

            publications {
                // Creates a Maven publication called "release".
                release(MavenPublication) {
                    groupId = 'com.zuko.libs'
                    artifactId = 'billingz'
                    version = getVersionName()
                    artifact("$buildDir/outputs/aar/lib-release.aar")
                }

                // Creates a Maven publication called "debug".
                debug(MavenPublication) {
                    // Applies the component for the debug build variant
                    // from components.debug
                    groupId = 'com.zuko.libs'
                    artifactId = 'billingz-debug'
                    version = getVersionName()
                    artifact("$buildDir/outputs/aar/lib-debug.aar")
                }
            }
        }
    }

    compileSdk LibraryInfo.compileSDK
    buildToolsVersion LibraryInfo.buildTools

    defaultConfig {
        minSdk LibraryInfo.minSDK
        targetSdk LibraryInfo.targetSDK
        group = "com.zuko.billingz"
        versionCode 1
        versionName getVersionName()
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions "library"

    productFlavors {
        google {
            dimension = "library"
            versionNameSuffix = "-google"
        }
        amazon {
            dimension = "library"
            versionNameSuffix = "-amazon"
        }
    }
}

dependencies {
    implementation project(':core')
    implementation project(':google')
    implementation project(':amazon')

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}