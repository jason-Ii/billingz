plugins {
    id "com.android.library"
    id 'maven-publish'
    id "kotlin-android"
    id "kotlin-kapt"
    id "org.jetbrains.dokka"
}

apply from: "$project.rootDir/spotless.gradle"

android {
    def versionProperties = new Properties()
    rootProject.file("version.properties").withInputStream { versionProperties.load(it) }

    def getDynamicVersionCode =  { ->
        String major = versionProperties['v.major']
        String minor = versionProperties['v.minor']
        String hotfix = versionProperties['v.hotfix']
        String result = "$major$minor$hotfix"
        return result.toInteger()
    }

    def getVersionName = { ->
        String major = versionProperties['v.major']
        String minor = versionProperties['v.minor']
        String hotfix = versionProperties['v.hotfix']
        String result = "${major.toString()}.${minor.toString()}.${hotfix.toString()}"
        return result
    }

    def getArtifactId = { ->
        return rootProject.name
    }

    // Github Packages
    def githubProperties = new Properties()
    githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/rjsuzuki/billingz")
                credentials {
                    username = System.getenv('GPR_USER')    ?: githubProperties['gpr.usr'] // GPR_USER is a CI Environment Variable
                    password = System.getenv('GPR_API_KEY') ?: githubProperties['gpr.key'] // GPR_API_KEY is a CI Environment Variable
                }
            }
        }

        publications {
            release(MavenPublication) {
                groupId 'com.rjsuzuki.libraries'
                artifactId getArtifactId()
                version getVersionName()
                artifact("$buildDir/outputs/aar/lib-release.aar")
            }
        }
    }

    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        group = "com.zuko.billingz"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName getVersionName()
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        viewBinding true
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    api "com.android.billingclient:billing-ktx:4.0.0"
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0-RC-native-mt'
    api 'org.jetbrains.kotlin:kotlin-stdlib:1.5.10'
    api "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    api "androidx.core:core-ktx:1.5.0"
    api "androidx.appcompat:appcompat:1.3.0"
    api "com.google.android.material:material:1.3.0"
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    api 'com.airbnb.android:lottie:3.7.0'

    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
}

dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}

task installGitHook(type: Copy) {
    println "Installing git hooks..."

    from new File(rootProject.rootDir, "scripts/pre-commit")
    into { new File(rootProject.rootDir, '.git/hooks') }

    fileMode 0775
}

tasks.getByName("preBuild").dependsOn installGitHook
